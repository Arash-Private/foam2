p({
  "class": "foam.nanos.boot.NSpec",
  "name": "localClusterConfigDAO",
  "lazy": true,
  "serve": false,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.mrac.ClusterConfig.getOwnClassInfo())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("clusterConfig")
      .setAuthorize(false)
      .setCluster(false)
      .setPm(true)
      .build();
   """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "clusterConfigDAO",
  "lazy": true,
  "serve": true,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.mrac.ClusterConfig.getOwnClassInfo())
      .setInnerDAO((foam.dao.DAO) x.get("localClusterConfigDAO"))
      .setEnableInterfaceDecorators(false)
      .build();
  """,
  "client": "{\"of\":\"foam.nanos.mrac.ClusterConfig\"}"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "clusterConfigService",
  "lazy": true,
  "serve": false,
  "serviceScript": """
    return new foam.nanos.mrac.DefaultClusterConfigService.Builder(x).build();
  """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "cluster",
  "lazy": false,
  "serve": true,
  "authenticate":true,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.mrac.ClusterServerDAO.getOwnClassInfo())
      .setInnerDAO(new foam.nanos.mrac.ClusterServerDAO.Builder(x).build())
      .setNullify(true)
      .setEnableInterfaceDecorators(false)
      .setRuler(false)
      .setAuthorize(false)
      .build();
  """
})
