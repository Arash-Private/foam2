p({
  "class": "foam.nanos.boot.NSpec",
  "name": "localClusterConfigDAO",
  "lazy": true,
  "serve": false,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.medusa.ClusterConfig.getOwnClassInfo())
      .setCluster(false)
      .setRuler(false)
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("clusterConfig")
      .setAuthorize(false)
      .setPm(true)
      .build();
   """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "clusterConfigDAO",
  "lazy": true,
  "serve": true,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.medusa.ClusterConfig.getOwnClassInfo())
      .setInnerDAO((foam.dao.DAO) x.get("localClusterConfigDAO"))
      .setCluster(false)
      .setRuler(false)
      .setEnableInterfaceDecorators(false)
      .build();
  """,
  "client": "{\"of\":\"foam.nanos.medusa.ClusterConfig\"}"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "clusterConfigService",
  "lazy": false,
  "serve": false,
  "serviceClass": "foam.nanos.medusa.DefaultClusterConfigService"
})

// p({
//   "class": "foam.nanos.boot.NSpec",
//   "name": "clusterConfigMonitor",
//   "serve": false,
//   "serviceClass": "foam.nanos.medusa.ClusterConfigMonitor"
// })

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "cluster",
  "lazy": false,
  "serve": true,
  "authenticate":true,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.medusa.ClusterServerDAO.getOwnClassInfo())
      .setInnerDAO(new foam.nanos.medusa.ClusterServerDAO.Builder(x).build())
      .setCluster(false)
      .setNullify(true)
      .setEnableInterfaceDecorators(false)
      .setRuler(false)
      .setAuthorize(false)
      .build();
  """
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"tcpServer",
  "lazy":false,
  "serviceClass":"foam.nanos.medusa.TCPNioServer"
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"quorumService",
  "lazy":false,
  "serviceClass":"foam.nanos.medusa.quorum.QuorumService"
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"electoralService",
  "lazy":false,
  "serve":true,
  "boxClass":"foam.nanos.medusa.ElectoralServiceSkeleton",
  "authenticate": true,
  "serviceClass":"foam.nanos.medusa.ElectoralServiceServer",
  "client":"{ \"class\":\"foam.nanos.medusa.ClientElectoralService\" }"
})
