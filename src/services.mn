//Medusa Node
p({"class":"foam.nanos.boot.NSpec", "name":"nSpecDAO",                           "serve":true,  "authenticate": false, "serviceClass":"foam.dao.ProxyDAO", "client":"{\"of\":\"foam.nanos.boot.NSpec\",\"cache\":true}"})

p({"class":"foam.nanos.boot.NSpec", "name":"clusterNodeDAO",                  "lazy":false,  "serve":true,  "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setRuler(false).setAuthorize(false).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"clusterNodes\").setGuid(true).setOf(foam.nanos.mrac.ClusterNode.getOwnClassInfo()).build();", "client":"{\"of\":\"foam.nanos.demo.DemoObject\", \"remoteListenerSupport\": false}"})

p({"class":"foam.nanos.boot.NSpec", "name":"http",                             "lazy":false, "service":{"class":"foam.nanos.jetty.HttpServer","port":8004,"forwardedForProxyWhitelist":[],"welcomeFiles":["/src/foam/nanos/controller/index.html"],"servletMappings":[{"class":"foam.nanos.servlet.ServletMapping","className":"foam.nanos.http.NanoRouter","pathSpec":"/service/*"},{"class":"foam.nanos.servlet.ServletMapping","className":"org.eclipse.jetty.servlet.DefaultServlet","pathSpec":"/*","initParameters":{"dirAllowed":"true","redirectWelcome":"true"}}]}})

p({"class":"foam.nanos.boot.NSpec", "name":"tcpServer",                        "lazy":false, "serve":true, "serviceClass":"foam.nanos.mrac.TCPNioServer"})


p({"class":"foam.nanos.boot.NSpec", "name":"demoObjectDAO",                    "lazy":false,  "serve":true,  "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setRuler(false).setAuthorize(false).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"demoObjects\").setGuid(true).setOf(foam.nanos.demo.DemoObject.getOwnClassInfo()).build();", "client":"{\"of\":\"foam.nanos.demo.DemoObject\", \"remoteListenerSupport\": false}"})

p({"class":"foam.nanos.boot.NSpec", "name":"AuthenticatedNSpecDAO",              "serve":true,  "serviceClass":"foam.dao.ProxyDAO", "client":"{\"of\":\"foam.nanos.boot.NSpec\",\"cache\":true}"})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "auth",
  "serve": true,
  "authenticate": false,
  "boxClass": "foam.nanos.auth.AuthServiceSkeleton",
  "serviceScript": """
    return new foam.nanos.auth.SystemAuthService.Builder(x)
      .setDelegate(new foam.nanos.auth.twofactor.TwoFactorAuthService.Builder(x)
      .setDelegate(new foam.nanos.auth.PasswordExpiryAuthService.Builder(x)
      .setDelegate(new foam.nanos.auth.EnabledCheckAuthService.Builder(x)
      .setDelegate(new foam.nanos.auth.CachingAuthService(new foam.nanos.auth.UserAndGroupAuthService(x)))
      .build()).build()).build()).build();
  """,
  "client": "{\"class\":\"foam.nanos.auth.CachedAuthServiceProxy\",\"delegate\":{\"class\":\"foam.nanos.auth.ClientLoginAuthService\"}}"
})

//Medusa Node Port
p({"class":"foam.nanos.boot.NSpec", "name":"singleJournal", "authenticate":false, "boxClass": "foam.dao.DAOSkeleton",          "lazy":false,  "serve":true,  "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setRuler(false).setPermissioned(false).setGuid(false).setAuthorize(false).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"singleJournals\").setMedusaNode(true).setOf(foam.nanos.mrac.MedusaEntry.getOwnClassInfo()).build();", "client":"{\"of\":\"foam.nanos.mrac.MedusaEntry\", \"remoteListenerSupport\": false}"})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "MNService",
  "serve": true,
  "authenticate": false,
  "boxClass": "foam.nanos.mrac.MNServiceSkeleton",
  "serviceScript": """
    return new foam.nanos.mrac.MNServiceImpl();
  """,
  "client": """
    {
      "class": "foam.nanos.auth.ClientLoginAuthService"
    }
  """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "entryRecordDAO",
  "lazy": false,
  "serve": true,
  "serviceScript":
  """
    return new foam.dao.EasyDAO
      .Builder(x)
      .setRuler(false)
      .setAuthorize(false)
      .setSeqNo(true)
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("entryRecords")
      .setOf(foam.nanos.mrac.EntryRecord.getOwnClassInfo())
      .build();
  """,
  "client": """
    {
      "of": "foam.nanos.mrac.EntryRecord"
    }
  """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "fileMetaDAO",
  "lazy": false,
  "serve": true,
  "serviceScript":
  """
    return new foam.dao.EasyDAO
      .Builder(x)
      .setRuler(false)
      .setAuthorize(false)
      .setSeqNo(true)
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("fileMetas")
      .setOf(foam.nanos.mrac.FileMeta.getOwnClassInfo())
      .build();
  """,
  "client": """
    {
      "of": "foam.nanos.mrac.FileMeta"
    }
  """
})
p({"class":"foam.nanos.boot.NSpec","name":"appConfig",                         "lazy":false, "service":{"class":"foam.nanos.app.AppConfig"}})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "ping",
  "lazy": "false",
  "authenticate": false,
  "serviceClass": "foam.nanos.http.PingService"
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"scriptDAO",
  "serve":true,
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setGuid(true)
      .setOf(foam.nanos.script.Script.getOwnClassInfo())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("scripts")
      .setDecorator(new foam.nanos.script.ScriptRunnerDAO(null))
      .setOrder(new foam.core.PropertyInfo[] {foam.nanos.script.Script.ID})
      .setIndex(new foam.core.PropertyInfo[] {foam.nanos.script.Script.ID})
      .build();
  """,
  "client":"{\"of\":\"foam.nanos.script.Script\"}"
})
