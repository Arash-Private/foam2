p({"class":"foam.nanos.script.Script","id":"279885d4-28ad-4af8-b1d9-69e6105970e1","description":"test","server":true,"scheduled":false,"code":"return \"hello World\"","output":"","notes":""})
p({"class":"foam.nanos.script.Script","id":"279885d4-28ad-4af8-b1d9-69e6105970e1","description":"test","lastRun":"2017-09-29T16:23:47.978Z","server":true,"scheduled":false,"code":"return \"hello World\"","output":"","notes":""})
p({"class":"foam.nanos.script.Script","id":"createPermissions","description":"Create missing Permissions","server":false,"code":"x.groupDAO.select(function(g) {\nfor ( var i = 0 ; i < g.permissions.length ; i++ ) {\nx.permissionDAO.put(g.permissions[i]);\n}\nperm = g.id + '.*';\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\n});\n\nx.serviceProviderDAO.select(function(s) {\nperm = 'spid.read.' + s.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\nperm = 'spid.update.' + s.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\nperm = 'spid.delete.' + s.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\n});\n\nx.menuDAO.select(function(m) {\nperm = 'menu.read.' + m.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\nperm = 'menu.read.' + m.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\n});\n\nx.nSpecDAO.select(function(s) {\nperm = 'service.run.' + s.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\nperm = 'service.read.' + s.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\n});\n\n"})
p({"class":"foam.nanos.script.Script","id":"showJDAODirectory","description":"Discover where JDAO files are being saved.","lastRun":"2018-01-10T17:09:54.779Z","server":true,"scheduled":false,"code":"import foam.dao.*;\n\nsetAccessibility(true);\n\nDAO dao = x.get(\"userDAO\");\n\nwhile ( ! ( dao instanceof JDAO ) ) dao = dao.getDelegate();\n\nprint(dao.file_);","output":"/Users/kgr/NANOPAY/users\n","notes":""})
p({"class":"foam.nanos.script.Script","id":"benchmarkHashing","description":"Concurrent Hashing Benchmark","code":"import foam.nanos.bench.*;\nimport net.nanopay.bench.*;\n\nx = x.put(\"pmLogger\", null);\nb = new HashingBenchmark();\nbuilder = new BenchmarkRunner.Builder(x).setThreadCount(2).setInvocationCount(10000).setBenchmark(b);\nrunner = builder.build();\nrunner.execute(x);"})
p({"class": "foam.nanos.script.TestRunnerScript", "id":"testRunnerScript"})
p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","description":"Sets up the services necessary to run the candlestick demo script.","server":false,"status":1,"code":"var cls = 'foam.demos.analytics.StockSnapshot';\nvar timeProp = 'time';\nvar valueProp = 'price';\nvar groupBy = ['symbol'];\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `\n    return new foam.dao.MDAO(\n        foam.nanos.analytics.Candlestick.getOwnClassInfo());\n            `,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    // Create a decorator that wires up the CandlestickDAOs.\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\n${configs.map((c, i) => {\n    return `\ndao = new foam.dao.MDAO(${cls.id}.getOwnClassInfo());\n${c.name} = new foam.nanos.analytics.CandlestickDAODecorator.Builder(x)\n    .setCandlestickDAO((foam.dao.DAO) x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setTimeProp(\"${timeProp}\")\n    .setValueProp(\"${valueProp}\")\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .setDelegate(${i === 0 ? 'dao' : configs[i-1].name})\n    .setGroupBy(new String[]{${groupBy.map(g => `\"${g}\"`).join(',')}})\n    .build();\n    `\n}).join('\\n')}\nreturn ${configs[configs.length-1].name};\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});","output":"Done! Restart server for changes to take effect\n"})
p({"class":"foam.nanos.script.Script","id":"CandlestickDemoGenData","server":false,"status":1,"code":"var cls = foam.demos.analytics.StockSnapshot;\nvar configs = [\n    'hourly',\n    'daily',\n    'weekly'\n];\nvar dao = x[foam.String.daoize(cls.model_.name)];\nvar daos = configs.map(c => x[c + cls.model_.name + 'DAO']).concat(dao);\n\nif ( ! dao ) {\n  throw 'Services not found. Run service script first!';\n}\n\nvar genData = function(symbol, start) {\n    var promises = [];\n    var currentTime = 0;\n    var endTime = 14 * 24 * 60 * 60 * 1000;\n    var currentPrice = start;\n    while ( currentTime < endTime ) {\n        promises.push(dao.put(cls.create({\n            symbol: symbol,\n            time: new Date(currentTime),\n            price: currentPrice\n        })));\n        currentTime += 30 * 60 * 1000;\n        currentPrice += Math.floor(Math.random() * 5) - 2;\n    }\n    return promises;\n}\n\nPromise.all(daos.map(d => d.removeAll())).then(function() {\n    return genData('TSLA', 1000);\n}).then(function() {\n    return genData('NFLX', 300);\n}).then(function() {\n    print('Done')\n});","output":"Done\n"})p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices2","description":"Sets up the services necessary to run the candlestick demo script.","server":false,"status":1,"code":"var cls = 'foam.demos.analytics.StockSnapshot';\nvar timeProp = 'time';\nvar valueProp = 'price';\nvar groupBy = ['symbol'];\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `\n    return new foam.dao.MDAO(\n        foam.nanos.analytics.Candlestick.getOwnClassInfo());\n            `,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    // Create a decorator that wires up the CandlestickDAOs.\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\n${configs.map((c, i) => {\n    return `\ndao = new foam.dao.MDAO(${cls.id}.getOwnClassInfo());\n${c.name} = new foam.nanos.analytics.CandlestickDAODecorator.Builder(x)\n    .setCandlestickDAO((foam.dao.DAO) x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setTimeProp(\"${timeProp}\")\n    .setValueProp(\"${valueProp}\")\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .setDelegate(${i === 0 ? 'dao' : configs[i-1].name})\n    .setGroupBy(new String[]{${groupBy.map(g => `\"${g}\"`).join(',')}})\n    .build();\n    `\n}).join('\\n')}\nreturn ${configs[configs.length-1].name};\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});","output":"Done! Restart server for changes to take effect\n"})
p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","code":"var cls = 'foam.demos.analytics.StockSnapshot';\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `return new foam.dao.MDAO(${cls.id}.getOwnClassInfo());`\n    }));\n}).then(function() {\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());`,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: configs[0].name + cls.model_.name + 'FoldManager',\n        serviceScript: `\nreturn new foam.nanos.analytics.DAOFoldManager.Builder(x)\n    .setDao(x.get(\"${configs[0].name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${configs[0].periodLengthMs})\n    .build();\n        `,\n    }));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});\n\n/*\nvar timeProp = 'time';\nvar valueProp = 'price';\nvar groupBy = ['symbol'];\n\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `\n    return new foam.dao.MDAO(\n        foam.nanos.analytics.Candlestick.getOwnClassInfo());\n            `,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    // Create a decorator that wires up the CandlestickDAOs.\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\n${configs.map((c, i) => {\n    return `\ndao = new foam.dao.MDAO(${cls.id}.getOwnClassInfo());\n${c.name} = new foam.nanos.analytics.CandlestickDAODecorator.Builder(x)\n    .setCandlestickDAO((foam.dao.DAO) x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setTimeProp(\"${timeProp}\")\n    .setValueProp(\"${valueProp}\")\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .setDelegate(${i === 0 ? 'dao' : configs[i-1].name})\n    .setGroupBy(new String[]{${groupBy.map(g => `\"${g}\"`).join(',')}})\n    .build();\n    `\n}).join('\\n')}\nreturn ${configs[configs.length-1].name};\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});\n*/"})

p({"class":"foam.nanos.script.Script","id":"CandlestickDemoGenData","status":3,"output":"TypeError: Cannot read property 'analytics' of undefined"})
p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","code":"var cls = 'foam.demos.analytics.StockSnapshot';\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `return new foam.dao.MDAO(${cls.id}.getOwnClassInfo());`,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());`,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: configs[0].name + cls.model_.name + 'FoldManager',\n        serviceScript: `\nreturn new foam.nanos.analytics.DAOFoldManager.Builder(x)\n    .setDao(x.get(\"${configs[0].name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${configs[0].periodLengthMs})\n    .build();\n        `,\n    }));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});\n\n/*\nvar timeProp = 'time';\nvar valueProp = 'price';\nvar groupBy = ['symbol'];\n\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `\n    return new foam.dao.MDAO(\n        foam.nanos.analytics.Candlestick.getOwnClassInfo());\n            `,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    // Create a decorator that wires up the CandlestickDAOs.\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\n${configs.map((c, i) => {\n    return `\ndao = new foam.dao.MDAO(${cls.id}.getOwnClassInfo());\n${c.name} = new foam.nanos.analytics.CandlestickDAODecorator.Builder(x)\n    .setCandlestickDAO((foam.dao.DAO) x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setTimeProp(\"${timeProp}\")\n    .setValueProp(\"${valueProp}\")\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .setDelegate(${i === 0 ? 'dao' : configs[i-1].name})\n    .setGroupBy(new String[]{${groupBy.map(g => `\"${g}\"`).join(',')}})\n    .build();\n    `\n}).join('\\n')}\nreturn ${configs[configs.length-1].name};\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});\n*/"})

p({"class":"foam.nanos.script.Script","id":"CandlestickDemoGenData","status":1,"output":"Done\n"})
p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","code":"var cls = 'foam.demos.analytics.StockSnapshot';\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n}).then(function() {\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());`,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: configs[0].name + cls.model_.name + 'FoldManager',\n        serviceScript: `\nreturn new foam.nanos.analytics.DAOFoldManager.Builder(x)\n    .setDao(x.get(\"${configs[0].name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${configs[0].periodLengthMs})\n    .build();\n        `,\n    }));\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\nreturn new foam.nanos.analytics.FoldManagerDAODecorator.Builder(x)\n    .setDelegate(new foam.dao.MDAO(${cls.id}.getOwnClassInfo()))\n    .setFm(x.get(\"${configs[0].name + cls.model_.name + 'FoldManager'}\"))\n    .build();\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});\n\n/*\nvar timeProp = 'time';\nvar valueProp = 'price';\nvar groupBy = ['symbol'];\n\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `\n    return new foam.dao.MDAO(\n        foam.nanos.analytics.Candlestick.getOwnClassInfo());\n            `,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    // Create a decorator that wires up the CandlestickDAOs.\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\n${configs.map((c, i) => {\n    return `\ndao = new foam.dao.MDAO(${cls.id}.getOwnClassInfo());\n${c.name} = new foam.nanos.analytics.CandlestickDAODecorator.Builder(x)\n    .setCandlestickDAO((foam.dao.DAO) x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setTimeProp(\"${timeProp}\")\n    .setValueProp(\"${valueProp}\")\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .setDelegate(${i === 0 ? 'dao' : configs[i-1].name})\n    .setGroupBy(new String[]{${groupBy.map(g => `\"${g}\"`).join(',')}})\n    .build();\n    `\n}).join('\\n')}\nreturn ${configs[configs.length-1].name};\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});\n*/"})

p({"class":"foam.nanos.script.Script","id":"CandlestickDemoGenData","code":"var cls = foam.demos.analytics.StockSnapshot;\nvar configs = [\n    'hourly',\n    'daily',\n    'weekly'\n];\nvar dao = x[foam.String.daoize(cls.model_.name)];\nvar daos = configs.map(c => x[c + cls.model_.name + 'DAO']).concat(dao);\n\nif ( ! dao ) {\n  throw 'Services not found. Run service script first!';\n}\n\nvar genData = function(symbol, start) {\n    var promises = [];\n    var currentTime = 0;\n    var endTime = 14 * 24 * 60 * 60 * 1000;\n    var currentPrice = start;\n    while ( currentTime < endTime ) {\n        var o = promises.push(dao.put(cls.create({\n            symbol: symbol,\n            time: new Date(currentTime),\n            price: currentPrice\n        })));\n        console.log(foam.json.stringify(o));\n        currentTime += 30 * 60 * 1000;\n        currentPrice += Math.floor(Math.random() * 5) - 2;\n    }\n    return promises;\n}\n\nPromise.all(daos.map(d => d.removeAll())).then(function() {\n    return genData('TSLA', 1000);\n}).then(function() {\n    return genData('NFLX', 300);\n}).then(function() {\n    print('Done')\n});"})
p({"class":"foam.nanos.script.Script","id":"CandlestickDemoGenData","code":"var cls = foam.demos.analytics.StockSnapshot;\nvar configs = [\n    'hourly',\n    'daily',\n    'weekly'\n];\nvar dao = x[foam.String.daoize(cls.model_.name)];\nvar daos = configs.map(c => x[c + cls.model_.name + 'DAO']).concat(dao);\n\nif ( ! dao ) {\n  throw 'Services not found. Run service script first!';\n}\n\nvar genData = function(symbol, start) {\n    var promises = [];\n    var currentTime = 0;\n    var endTime = 14 * 24 * 60 * 60 * 1000;\n    var currentPrice = start;\n    while ( currentTime < endTime ) {\n        var o = cls.create({\n            symbol: symbol,\n            time: new Date(currentTime),\n            price: currentPrice\n        });\n        promises.push(dao.put(o));\n        console.log(foam.json.stringify(o));\n        currentTime += 30 * 60 * 1000;\n        currentPrice += Math.floor(Math.random() * 5) - 2;\n    }\n    return promises;\n}\n\nPromise.all(daos.map(d => d.removeAll())).then(function() {\n    return genData('TSLA', 1000);\n}).then(function() {\n    return genData('NFLX', 300);\n}).then(function() {\n    print('Done')\n});"})

p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","status":3,"code":"var cls = 'foam.demos.analytics.StockSnapshot';\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n}).then(function() {\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());`,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: configs[0].name + cls.model_.name + 'FoldManager',\n        serviceScript: `\nreturn new foam.nanos.analytics.DAOFoldManager.Builder(x)\n    .setDao(x.get(\"${configs[0].name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${configs[0].periodLengthMs})\n    .build();\n        `,\n    }));\n}).then(function() {\n    return Promise.all(configs\n        .slice(1)\n        .map((c, i) => x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'ReduceManager',\n            serviceScript: `\nreturn new foam.nanos.analytics.DAOReduceManager.Builder(x)\n    .setSourceDAO(x.get(\"${configs[i-1].name + cls.model_.name + 'DAO'}\"))\n    .setDestDAO(x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .build();\n        `\n        })))\n    );\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\nreturn new foam.nanos.analytics.FoldManagerDAODecorator.Builder(x)\n    .setDelegate(new foam.dao.MDAO(${cls.id}.getOwnClassInfo()))\n    .setFm(x.get(\"${configs[0].name + cls.model_.name + 'FoldManager'}\"))\n    .build();\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});","output":""})
p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","status":1,"code":"var cls = 'foam.demos.analytics.StockSnapshot';\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n}).then(function() {\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());`,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: configs[0].name + cls.model_.name + 'FoldManager',\n        serviceScript: `\nreturn new foam.nanos.analytics.DAOFoldManager.Builder(x)\n    .setDao(x.get(\"${configs[0].name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${configs[0].periodLengthMs})\n    .build();\n        `,\n    }));\n}).then(function() {\n    return Promise.all(configs\n        .slice(1)\n        .map((c, i) => x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'ReduceManager',\n            serviceScript: `\nreturn new foam.nanos.analytics.DAOReduceManager.Builder(x)\n    .setSourceDAO(x.get(\"${configs[i].name + cls.model_.name + 'DAO'}\"))\n    .setDestDAO(x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .build();\n        `\n        })))\n    );\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\nreturn new foam.nanos.analytics.FoldManagerDAODecorator.Builder(x)\n    .setDelegate(new foam.dao.MDAO(${cls.id}.getOwnClassInfo()))\n    .setFm(x.get(\"${configs[0].name + cls.model_.name + 'FoldManager'}\"))\n    .build();\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});","output":"Done! Restart server for changes to take effect\n"})

p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","status":3,"code":"var cls = 'foam.demos.analytics.StockSnapshot';\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n}).then(function() {\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());`,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: configs[0].name + cls.model_.name + 'FoldManager',\n        serviceScript: `\nreturn new foam.nanos.analytics.DAOFoldManager.Builder(x)\n    .setDao(x.get(\"${configs[0].name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${configs[0].periodLengthMs})\n    .build();\n        `,\n    }));\n}).then(function() {\n    return Promise.all(configs\n        .slice(1)\n        .map((c, i) => x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'ReduceManager',\n            serviceScript: `\nreturn new foam.nanos.analytics.DAOReduceManager.Builder(x)\n    .setSourceDAO(x.get(\"${configs[i].name + cls.model_.name + 'DAO'}\"))\n    .setDestDAO(x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .build();\n        `\n        })))\n    );\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\nreturn new foam.nanos.analytics.FoldManagerDAODecorator.Builder(x)\n    .setDelegate(new foam.dao.MDAO(${cls.id}.getOwnClassInfo()))\n    .setFm(x.get(\"${configs[0].name + cls.model_.name + 'FoldManager'}\"))\n    .build();\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    return Promise.all([\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemoTop',\n            label: 'CandlestickDemo',\n            handler: foam.nanos.menu.SubMenu.create()\n        })\n    ].concat(configs.map(c => [\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemo'+c.name,\n            label: c.name,\n            parent: 'cstickDemoTop',\n            handler: foam.nanos.menu.DAOMenu.create({\n                daoKey: c.name + cls.model_.name + 'DAO'\n            })\n        })\n    ])).map(m => x['menuDAO'].put(m)));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});","output":""})
p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","status":1,"code":"var cls = 'foam.demos.analytics.StockSnapshot';\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n}).then(function() {\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());`,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: configs[0].name + cls.model_.name + 'FoldManager',\n        serviceScript: `\nreturn new foam.nanos.analytics.DAOFoldManager.Builder(x)\n    .setDao(x.get(\"${configs[0].name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${configs[0].periodLengthMs})\n    .build();\n        `,\n    }));\n}).then(function() {\n    return Promise.all(configs\n        .slice(1)\n        .map((c, i) => x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'ReduceManager',\n            serviceScript: `\nreturn new foam.nanos.analytics.DAOReduceManager.Builder(x)\n    .setSourceDAO(x.get(\"${configs[i].name + cls.model_.name + 'DAO'}\"))\n    .setDestDAO(x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .build();\n        `\n        })))\n    );\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\nreturn new foam.nanos.analytics.FoldManagerDAODecorator.Builder(x)\n    .setDelegate(new foam.dao.MDAO(${cls.id}.getOwnClassInfo()))\n    .setFm(x.get(\"${configs[0].name + cls.model_.name + 'FoldManager'}\"))\n    .build();\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    return Promise.all([\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemoTop',\n            label: 'CandlestickDemo',\n            handler: foam.nanos.menu.SubMenu.create(null, x)\n        })\n    ].concat(configs.map(c =>\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemo'+c.name,\n            label: c.name,\n            parent: 'cstickDemoTop',\n            handler: foam.nanos.menu.DAOMenu.create({\n                daoKey: c.name + cls.model_.name + 'DAO'\n            }, x)\n        })\n    )).map(m => x['menuDAO'].put(m)));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});","output":"Done! Restart server for changes to take effect\n"})

p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","code":"var cls = 'foam.demos.analytics.StockSnapshot';\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n}).then(function() {\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());`,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: configs[0].name + cls.model_.name + 'FoldManager',\n        serviceScript: `\nreturn new foam.nanos.analytics.DAOFoldManager.Builder(x)\n    .setDao(x.get(\"${configs[0].name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${configs[0].periodLengthMs})\n    .build();\n        `,\n    }));\n}).then(function() {\n    return Promise.all(configs\n        .slice(1)\n        .map((c, i) => x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'ReduceManager',\n            serviceScript: `\nreturn new foam.nanos.analytics.DAOReduceManager.Builder(x)\n    .setSourceDAO(x.get(\"${configs[i].name + cls.model_.name + 'DAO'}\"))\n    .setDestDAO(x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .build();\n        `\n        })))\n    );\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\nreturn new foam.nanos.analytics.FoldManagerDAODecorator.Builder(x)\n    .setDelegate(new foam.dao.MDAO(${cls.id}.getOwnClassInfo()))\n    .setFm(x.get(\"${configs[0].name + cls.model_.name + 'FoldManager'}\"))\n    .build();\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    return Promise.all([\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemoTop',\n            label: 'CandlestickDemo',\n            handler: foam.nanos.menu.SubMenu.create(null, x)\n        }),\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemoDao',\n            label: 'dao',\n            parent: 'cstickDemoTop',\n            handler: foam.nanos.menu.DAOMenu.create({\n                daoKey: foam.String.daoize(cls.model_.name),\n            }, x)\n        })\n    ].concat(configs.map(c =>\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemo'+c.name,\n            label: c.name,\n            parent: 'cstickDemoTop',\n            handler: foam.nanos.menu.DAOMenu.create({\n                daoKey: c.name + cls.model_.name + 'DAO'\n            }, x)\n        })\n    )).map(m => x['menuDAO'].put(m)));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});"})
p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","code":"var cls = 'foam.demos.analytics.StockSnapshot';\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n}).then(function() {\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());`,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: configs[0].name + cls.model_.name + 'FoldManager',\n        serviceScript: `\nreturn new foam.nanos.analytics.DAOFoldManager.Builder(x)\n    .setDao(x.get(\"${configs[0].name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${configs[0].periodLengthMs})\n    .build();\n        `,\n    }));\n}).then(function() {\n    return Promise.all(configs\n        .slice(1)\n        .map((c, i) => x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'ReduceManager',\n            serviceScript: `\nreturn new foam.nanos.analytics.DAOReduceManager.Builder(x)\n    .setSourceDAO(x.get(\"${configs[i].name + cls.model_.name + 'DAO'}\"))\n    .setDestDAO(x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .build();\n        `\n        })))\n    );\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\nreturn new foam.nanos.analytics.FoldManagerDAODecorator.Builder(x)\n    .setDelegate(new foam.dao.MDAO(${cls.id}.getOwnClassInfo()))\n    .setFm(x.get(\"${configs[0].name + cls.model_.name + 'FoldManager'}\"))\n    .build();\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    return Promise.all([\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemoTop',\n            label: 'CandlestickDemo',\n            handler: foam.nanos.menu.SubMenu.create(null, x)\n        }),\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemoDao',\n            label: 'dao',\n            parent: 'cstickDemoTop',\n            handler: foam.nanos.menu.DAOMenu.create({\n                daoKey: foam.String.daoize(cls.model_.name),\n            }, x)\n        })\n    ].concat(configs.map(c =>\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemo'+c.name,\n            label: c.name,\n            parent: 'cstickDemoTop',\n            handler: foam.nanos.menu.DAOMenu.create({\n                daoKey: c.name + cls.model_.name + 'DAO'\n            }, x)\n        })\n    )).map(m => x['menuDAO'].put(m)));\n}).then(function() {\n    return x['cronDAO'].put(foam.nanos.cron.Cron.create({\n        id: 'cstickDemoCron',\n        second: 15,\n        code: configs\n          .slice(1)\n          .map(c => c.name + cls.model_.name + 'ReduceManager')\n          .map(c => `x.get(\"${c}\").doReduce();`)\n          .join('\\n')\n    }));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});"})
p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","code":"var cls = 'foam.demos.analytics.StockSnapshot';\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n}).then(function() {\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());`,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: configs[0].name + cls.model_.name + 'FoldManager',\n        serviceScript: `\nreturn new foam.nanos.analytics.DAOFoldManager.Builder(x)\n    .setDao(x.get(\"${configs[0].name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${configs[0].periodLengthMs})\n    .build();\n        `,\n    }));\n}).then(function() {\n    return Promise.all(configs\n        .slice(1)\n        .map((c, i) => x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'ReduceManager',\n            serviceScript: `\nreturn new foam.nanos.analytics.DAOReduceManager.Builder(x)\n    .setSourceDAO(x.get(\"${configs[i].name + cls.model_.name + 'DAO'}\"))\n    .setDestDAO(x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .build();\n        `\n        })))\n    );\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\nreturn new foam.nanos.analytics.FoldManagerDAODecorator.Builder(x)\n    .setDelegate(new foam.dao.MDAO(${cls.id}.getOwnClassInfo()))\n    .setFm(x.get(\"${configs[0].name + cls.model_.name + 'FoldManager'}\"))\n    .build();\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    return Promise.all([\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemoTop',\n            label: 'CandlestickDemo',\n            handler: foam.nanos.menu.SubMenu.create(null, x)\n        }),\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemoDao',\n            label: 'dao',\n            parent: 'cstickDemoTop',\n            handler: foam.nanos.menu.DAOMenu.create({\n                daoKey: foam.String.daoize(cls.model_.name),\n            }, x)\n        })\n    ].concat(configs.map(c =>\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemo'+c.name,\n            label: c.name,\n            parent: 'cstickDemoTop',\n            handler: foam.nanos.menu.DAOMenu.create({\n                daoKey: c.name + cls.model_.name + 'DAO'\n            }, x)\n        })\n    )).map(m => x['menuDAO'].put(m)));\n}).then(function() {\n    return x['cronDAO'].put(foam.nanos.cron.Cron.create({\n        id: 'cstickDemoCron',\n        second: 15,\n        code: configs\n          .slice(1)\n          .map(c => c.name + cls.model_.name + 'ReduceManager')\n          .map(c => `x.get(\"${c}\").doReduce();`)\n          .join('\\n')\n    }, x));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});"})

p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","code":"var cls = 'foam.demos.analytics.StockSnapshot';\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n}).then(function() {\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());`,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: configs[0].name + cls.model_.name + 'FoldManager',\n        serviceScript: `\nreturn new foam.nanos.analytics.DAOFoldManager.Builder(x)\n    .setDao(x.get(\"${configs[0].name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${configs[0].periodLengthMs})\n    .build();\n        `,\n    }));\n}).then(function() {\n    return Promise.all(configs\n        .slice(1)\n        .map((c, i) => x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'ReduceManager',\n            serviceScript: `\nreturn new foam.nanos.analytics.DAOReduceManager.Builder(x)\n    .setSourceDAO(x.get(\"${configs[i].name + cls.model_.name + 'DAO'}\"))\n    .setDestDAO(x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .build();\n        `\n        })))\n    );\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\nreturn new foam.nanos.analytics.FoldManagerDAODecorator.Builder(x)\n    .setDelegate(new foam.dao.MDAO(${cls.id}.getOwnClassInfo()))\n    .setFm(x.get(\"${configs[0].name + cls.model_.name + 'FoldManager'}\"))\n    .build();\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    return Promise.all([\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemoTop',\n            label: 'CandlestickDemo',\n            handler: foam.nanos.menu.SubMenu.create(null, x)\n        }),\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemoDao',\n            label: 'dao',\n            parent: 'cstickDemoTop',\n            handler: foam.nanos.menu.DAOMenu.create({\n                daoKey: foam.String.daoize(cls.model_.name),\n            }, x)\n        })\n    ].concat(configs.map(c =>\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemo'+c.name,\n            label: c.name,\n            parent: 'cstickDemoTop',\n            handler: foam.nanos.menu.DAOMenu.create({\n                daoKey: c.name + cls.model_.name + 'DAO'\n            }, x)\n        })\n    )).map(m => x['menuDAO'].put(m)));\n}).then(function() {\n    return x['cronDAO'].put(foam.nanos.cron.Cron.create({\n        id: 'cstickDemoCron',\n        second: 15,\n        code: configs\n          .slice(1)\n          .map(c => c.name + cls.model_.name + 'ReduceManager')\n          .map(c => `x.get(\"${c}\").doReduce();`)\n          .join('\\n') + '\\nprint(\"Done reducing\")'\n    }, x));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});"})

p({"class":"foam.nanos.script.Script","id":"CandlestickDemoServices","code":"var cls = 'foam.demos.analytics.StockSnapshot';\n\nvar configs = [\n  {\n      name: 'hourly',\n      periodLengthMs: 60 * 60 * 1000\n  },\n  {\n      name: 'daily',\n      periodLengthMs: 24 * 60 * 60 * 1000\n  },\n  {\n      name: 'weekly',\n      periodLengthMs: 7 * 24 * 60 * 60 * 1000\n  }\n];\n\nctrl.__subContext__.classloader.load(cls).then(function() {\n    cls = foam.lookup(cls);\n}).then(function() {\n    return Promise.all(configs.map(function(c) {\n        // Create each of the Candlestick DAOs.\n        return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'DAO',\n            serve: true,\n            serviceScript: `return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());`,\n            client: `{\"of\": \"foam.nanos.analytics.Candlestick\"}`\n        }));\n    }))\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: configs[0].name + cls.model_.name + 'FoldManager',\n        serviceScript: `\nreturn new foam.nanos.analytics.DAOFoldManager.Builder(x)\n    .setDao(x.get(\"${configs[0].name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${configs[0].periodLengthMs})\n    .build();\n        `,\n    }));\n}).then(function() {\n    return Promise.all(configs\n        .slice(1)\n        .map((c, i) => x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n            name: c.name + cls.model_.name + 'ReduceManager',\n            serviceScript: `\nreturn new foam.nanos.analytics.DAOReduceManager.Builder(x)\n    .setSourceDAO(x.get(\"${configs[i].name + cls.model_.name + 'DAO'}\"))\n    .setDestDAO(x.get(\"${c.name + cls.model_.name + 'DAO'}\"))\n    .setPeriodLengthMs(${c.periodLengthMs})\n    .build();\n        `\n        })))\n    );\n}).then(function() {\n    return x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: foam.String.daoize(cls.model_.name),\n        serve: true,\n        serviceScript: `\nreturn new foam.nanos.analytics.FoldManagerDAODecorator.Builder(x)\n    .setDelegate(new foam.dao.MDAO(${cls.id}.getOwnClassInfo()))\n    .setFm(x.get(\"${configs[0].name + cls.model_.name + 'FoldManager'}\"))\n    .build();\n        `,\n        client: `{\"of\": \"${cls.id}\"}`\n    }));\n}).then(function() {\n    return Promise.all([\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemoTop',\n            label: 'CandlestickDemo',\n            handler: foam.nanos.menu.SubMenu.create(null, x)\n        }),\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemoDao',\n            label: 'dao',\n            parent: 'cstickDemoTop',\n            handler: foam.nanos.menu.DAOMenu.create({\n                daoKey: foam.String.daoize(cls.model_.name),\n            }, x)\n        })\n    ].concat(configs.map(c =>\n        foam.nanos.menu.Menu.create({\n            id: 'cstickDemo'+c.name,\n            label: c.name,\n            parent: 'cstickDemoTop',\n            handler: foam.nanos.menu.DAOMenu.create({\n                daoKey: c.name + cls.model_.name + 'DAO'\n            }, x)\n        })\n    )).map(m => x['menuDAO'].put(m)));\n}).then(function() {\n    return x['cronDAO'].put(foam.nanos.cron.Cron.create({\n        id: 'cstickDemoCron',\n        second: 15,\n        enabled: true,\n        code: configs\n          .slice(1)\n          .map(c => c.name + cls.model_.name + 'ReduceManager')\n          .map(c => `x.get(\"${c}\").doReduce();`)\n          .join('\\n') + '\\nSystem.out.println(\"Done reducing\");'\n    }, x));\n}).then(function() {\n    print('Done! Restart server for changes to take effect');\n});"})
