p({"class":"foam.nanos.script.Script","id":"279885d4-28ad-4af8-b1d9-69e6105970e1","description":"test","server":true,"scheduled":false,"code":"return \"hello World\"","output":"","notes":""})
p({"class":"foam.nanos.script.Script","id":"279885d4-28ad-4af8-b1d9-69e6105970e1","description":"test","lastRun":"2017-09-29T16:23:47.978Z","server":true,"scheduled":false,"code":"return \"hello World\"","output":"","notes":""})
p({"class":"foam.nanos.script.Script","id":"createPermissions","description":"Create missing Permissions","server":false,"code":"x.groupDAO.select(function(g) {\nfor ( var i = 0 ; i < g.permissions.length ; i++ ) {\nx.permissionDAO.put(g.permissions[i]);\n}\nperm = g.id + '.*';\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\n});\n\nx.serviceProviderDAO.select(function(s) {\nperm = 'spid.read.' + s.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\nperm = 'spid.update.' + s.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\nperm = 'spid.delete.' + s.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\n});\n\nx.menuDAO.select(function(m) {\nperm = 'menu.read.' + m.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\nperm = 'menu.read.' + m.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\n});\n\nx.nSpecDAO.select(function(s) {\nperm = 'service.run.' + s.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\nperm = 'service.read.' + s.id;\np = foam.nanos.auth.Permission.create({id: perm});\nx.permissionDAO.put(p);\n});\n\n"})
p({"class":"foam.nanos.script.Script","id":"showJDAODirectory","description":"Discover where JDAO files are being saved.","lastRun":"2018-01-10T17:09:54.779Z","server":true,"scheduled":false,"code":"import foam.dao.*;\n\nsetAccessibility(true);\n\nDAO dao = x.get(\"userDAO\");\n\nwhile ( ! ( dao instanceof JDAO ) ) dao = dao.getDelegate();\n\nprint(dao.file_);","output":"/Users/kgr/NANOPAY/users\n","notes":""})
p({"class":"foam.nanos.script.Script","id":"benchmarkHashing","description":"Concurrent Hashing Benchmark","code":"import foam.nanos.bench.*;\nimport net.nanopay.bench.*;\n\nx = x.put(\"pmLogger\", null);\nb = new HashingBenchmark();\nbuilder = new BenchmarkRunner.Builder(x).setThreadCount(2).setInvocationCount(10000).setBenchmark(b);\nrunner = builder.build();\nrunner.execute(x);"})
p({"class": "foam.nanos.script.TestRunnerScript", "id":"testRunnerScript"})
p({"class":"foam.nanos.script.Script","id":"Flow2Services","server":false,"status":1,"code":"x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n    name: 'flow2UserDAO',\n    serve: true,\n    serviceScript: `\nreturn new foam.dao.MDAO(foam.demos.flow2.User);\n    `,\n    client: `{\"of\": \"foam.demos.flow2.User\"}`\n}));\n\nx['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n    name: 'flow2TransactionDAO',\n    serve: true,\n    serviceScript: `\nreturn new foam.dao.MDAO(foam.demos.flow2.Transaction);\n    `,\n    client: `{\"of\": \"foam.demos.flow2.Transaction\"}`\n}));","output":""})
p({"class":"foam.nanos.script.Script","id":"Flow2Services","code":"Promise.all([\n    x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: 'flow2UserDAO',\n        serve: true,\n        serviceScript: `\n    return new foam.dao.MDAO(foam.demos.flow2.User);\n        `,\n        client: `{\"of\": \"foam.demos.flow2.User\"}`\n    })),\n    x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: 'flow2TransactionDAO',\n        serve: true,\n        serviceScript: `\n    return new foam.dao.MDAO(foam.demos.flow2.Transaction);\n        `,\n        client: `{\"of\": \"foam.demos.flow2.Transaction\"}`\n    }))\n]).then(function() {\n    print(\"Done!\"); \n})","output":"Done!\n"})
p({"class":"foam.nanos.script.Script","id":"Flow2Services","code":"Promise.all([\n    x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: 'flow2UserDAO',\n        serve: true,\n        serviceScript: `\n    return new foam.dao.MDAO(foam.demos.flow2.User);\n        `,\n        client: `{\"of\": \"foam.demos.flow2.User\"}`\n    })),\n    x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: 'flow2TransactionDAO',\n        serve: true,\n        serviceScript: `\n    return new foam.dao.MDAO(foam.demos.flow2.Transaction);\n        `,\n        client: `{\"of\": \"foam.demos.flow2.Transaction\"}`\n    }))\n]).then(function() {\n    print(\"Done! Restart Server for changes to take effect\"); \n})","output":"Done! Restart Server for changes to take effect\n"})
p({"class":"foam.nanos.script.Script","id":"Flow2GenData","server":false,"code":"userDAO = x['flow2UserDAO'];\ntransactionDAO = x['flow2TransactionDAO'];\n\nPromise.all([\n    userDAO.put(foam.demos.flow2.User.create({\n        id: 1,\n        name: 'pHouse Inc',\n        balance: 13483,\n        denomination: 'USD',\n        createdOn: new Date(),\n        createdBy: 'Devil'\n    })),\n    userDAO.put(foam.demos.flow2.User.create({\n        id: 2,\n        name: 'VanY Inc',\n        balance: 2132149,\n        denomination: 'USD',\n        createdOn: new Date(),\n        createdBy: 'Angel'\n    })),\n    transactionDAO.put(foam.demos.flow2.Transaction.create({\n        id: 1,\n        payee: 1,\n        payer: 2,\n        amount: 1234,\n        denomination: 'USD',\n        createdOn: new Date()\n    })),\n    transactionDAO.put(foam.demos.flow2.Transaction.create({\n        id: 2,\n        payee: 2,\n        payer: 1,\n        amount: 12345,\n        denomination: 'USD',\n        createdOn: new Date()\n    })),\n]);"})

p({"class":"foam.nanos.script.Script","id":"Flow2GenData","status":3,"output":"TypeError: Cannot read property 'put' of undefined"})
p({"class":"foam.nanos.script.Script","id":"Flow2Services","code":"Promise.all([\n    x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: 'flow2UserDAO',\n        serve: true,\n        serviceScript: `\nreturn new foam.dao.MDAO(foam.demos.flow2.User);\n        `,\n        client: `{\"of\": \"foam.demos.flow2.User\"}`\n    })),\n    x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: 'flow2TransactionDAO',\n        serve: true,\n        serviceScript: `\nreturn new foam.dao.MDAO(foam.demos.flow2.Transaction);\n        `,\n        client: `{\"of\": \"foam.demos.flow2.Transaction\"}`\n    }))\n]).then(function() {\n    print(\"Done! Restart Server for changes to take effect\"); \n})"})
p({"class":"foam.nanos.script.Script","id":"Flow2Services","code":"Promise.all([\n    x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: 'flow2UserDAO',\n        serve: true,\n        lazy: true,\n        serviceScript: `\nreturn new foam.dao.MDAO(foam.demos.flow2.User);\n        `,\n        client: `{\"of\": \"foam.demos.flow2.User\"}`\n    })),\n    x['nSpecDAO'].put(foam.nanos.boot.NSpec.create({\n        name: 'flow2TransactionDAO',\n        serve: true,\n        lazy: true,\n        serviceScript: `\nreturn new foam.dao.MDAO(foam.demos.flow2.Transaction);\n        `,\n        client: `{\"of\": \"foam.demos.flow2.Transaction\"}`\n    }))\n]).then(function() {\n    print(\"Done! Restart Server for changes to take effect\"); \n})"})

p({"class":"foam.nanos.script.Script","id":"Flow2GenData","output":"Invalid Date: Devil"})
